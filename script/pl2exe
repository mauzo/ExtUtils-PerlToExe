#!/usr/bin/perl

=head1 NAME

pl2exe - Build a binary executable from a Perl script

=cut

use warnings;
use strict;

use version; our $VERSION = "0.01";

use ExtUtils::PerlToExe qw/build_exe/;
use Getopt::Long 2.33 qw/:config bundling require_order no_ignore_case/;
use Pod::Usage;

@ARGV or pod2usage "I need something to convert!";

my %opts;
GetOptions \%opts, qw{
    help|h
    output|o=s
    verbose|v+
    type|T=s
    zip|Z=s
} or pod2usage;
$opts{help} and pod2usage 1;

=head1 SYNOPSIS

pl2exe [-o|--output EXE] [-v|--verbose] [-T|--type TYPE] [-Z|--zip DIR]
    [SCRIPT] [ -- PERL OPTIONS [ -- ARGV ] ]

=head1 OPTIONS

    -h, --help      Display this help.
    -T, --type      Select how to include the script:
        append      Append it to the executable (default).
        noscript    Just bake in the given options to perl.
        path        Just bake in the provided path.
    -Z, --zip       Directory to zip and include.
    -o, --output    Output file. Defaults to F<a.out>.
    -v, --verbose   Increase verbosity.

=head1 DESCRIPTION

This prgram converts a Perl script into a binary executable. See
L<ExtUtils::PerlToExe/build_exe> for a detailed description of the
options.

=cut

$ARGV[0] =~ /^-/ or $opts{script} = shift;

my $list = $opts{perl} = [];

for (@ARGV) {
    /^--$/ and not $opts{argv} and $list = $opts{argv} = [], next;
    push @$list, $_;
}

build_exe %opts;

=head1 AUTHOR

Copyright 2009 Ben Morrow <ben@morrow.me.uk>.

This program is licensed under the same terms as Perl.
