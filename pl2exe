#!/usr/bin/perl

use warnings;
use strict;

use ExtUtils::Miniperl  qw/writemain/;
use List::Util          qw/max/;

open my $MAIN, ">", \my $C;
select $MAIN;
writemain;

sub Cqq {
    local $_ = shift // $_;
    s/\\/\\\\/g;
    s/"/\\"/g;
    $_;
}

my @argv        = ($0, @ARGV, "--");
my $argc        = @argv;
my $argv_buf    = join qq/\\0"\n"/, map Cqq, @argv;
my $argv_init   = "";
my $ptr         = 0;

for (0..$#argv) {
    $argv_init .= "my_argv[$_] = my_argv_buf + $ptr;\n";
    $ptr += 1 + length $argv[$_];
}

$ptr++;

for ($C) {
    s{\*my_perl;\K}{
        static int my_argc;
        static char my_argv_buf[$ptr] = "$argv_buf\\0";
    };
    s{\sexitstatus;\K}{
        char *my_argv[$argc + argc];
    };
    s{; \K ( [^;]* perl_parse\( [^)]* ,\s+) argc,\s+ argv,\s+}{
        $argv_init

        /* argv has an extra "\\0" on the end, so we can go all 
           the way up to argv[argc] */

        for (my_argc = 0; my_argc < argc; my_argc++) {
            my_argv[my_argc + $argc] = argv[my_argc + 1];
        }
        my_argc += $argc - 1;

        $1 my_argc, my_argv,
    }x;
}

select STDOUT;
print $C;
